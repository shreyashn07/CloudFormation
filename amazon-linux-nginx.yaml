---
Description: Setup an Amazon Linux Web server

Parameters:

  DBRootPassword:
    Type: String
    Description: Root password for MySQL
    NoEcho: 'true'
    MinLength: 7
    MaxLength: 41
    AllowedPattern: '[a-zA-Z0-9]+'

  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of an existing EC2 keypair to enable SSH access to the instance

  SSHCIDR:
    Type: String
    Description: The CIDR block restricting SSH
    MinLength: 9
    Default: 131.247.0.0/16
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x

Mappings:
  Region2AMI:
    us-east-1:
      AMI: ami-00eb20669e0990cb4
    us-west-1:
      AMI: ami-0bce08e823ed38bdd
    us-east-2:
      AMI: ami-0c64dd618a49aeee8
    us-west-2:
      AMI: ami-08d489468314a58df
    ap-south-1:
      AMI: ami-02913db388613c3e1
    ap-northeast-2:
      AMI: ami-0e1e385b0a934254a
    ap-southeast-1:
      AMI: ami-05c859630889c79c8
    ap-southeast-2:
      AMI: ami-07cc15c3ba6f8e287
    eu-west-1:
      AMI: ami-028188d9b49b32a80
    eu-west-2:
      AMI: ami-04de2b60dd25fbb2e
    eu-west-3:
      AMI: ami-0652eb0db9b20aeaf
    eu-north-1:
      AMI: ami-6a1f9414                    

Resources:
  EC2Instance:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          InstallAndConfig:
            - Install
            - Configure
            - info

        Install:
          packages:
            yum:
              nginx: []
              mysql-server: []
              

          files:
            /usr/share/nginx/html/index.html:
              content: |
                <html>
                  <body>
                  <h1>Shreyas Cloudformation server</h1>
                  <h2>with CloudFormation Helper Scripts</h2>
                  <p>Hi!</p>
                </html>
              mode: '00644'
              owner: root
              group: root
              
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
                interval=1
              mode: '000400'
              owner: root
              group: root
              
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.EC2Instance.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource EC2Instance --region ${AWS::Region} --configsets InstallAndConfig
                runas=root
              mode: '000400'
              owner: root
              group: root
              
          services:
            sysvinit:
              nginx:
                enabled: 'true'
                ensureRunning: 'true'
                
              cfn-hup:
                enabled: 'true'
                ensureRunnig: 'true'
                files:
                  - /etc/cfn/cfn-hup.conf
                  - /etc/cfn/hooks.d/cfn-auto-reloader.conf
                  
              mysqld:
                enabled: 'true'
                ensureRunning: 'true'

        Configure:
          commands:
            set_mysql_root_password:
              # set the MySQL password to that specified in the Parameters
              command: !Sub |
                mysqladmin -u root password ${DBRootPassword}

        info:
          commands:
              command: |
                     cd /usr/share/nginx/html
                     echo "<h1>Shreyas Hastantram CloudFormation Server</h1>" >> index.html
                     echo "<p> Public DNS:<b>">> index.html
                     curl http://169.254.169.254/latest/meta-data/public-hostname >> index.html
                     echo "</b></p>"              
      
    Properties:
      ImageId: !FindInMap [Region2AMI, !Ref 'AWS::Region', 'AMI']
      InstanceType: t2.micro
      SecurityGroups:
      - !Ref WebserverSecurityGroup
      Tags:
      - Key: Name
        Value: Amazon Linux Web Server
      KeyName: !Ref KeyName
      UserData:
        'Fn::Base64': !Sub |
          #!/bin/bash -x
          service nginx restart
          yum update -y aws-cfn-bootstrap
          /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource EC2Instance --region ${AWS::Region} --configsets InstallAndConfig

  WebserverSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allows HTTP
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        FromPort: 80
        ToPort: 80
        IpProtocol: tcp
      - CidrIp: !Ref SSHCIDR
        FromPort: 22
        ToPort: 22
        IpProtocol: tcp
        
Outputs:
  WebURL:
    Description: The URL for the web page.
    Value: !Sub 'http://${EC2Instance.PublicIp}'