Description: Setup an Ubuntu server with SSH

Parameters:
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of an existing EC2 keypair to enable SSH access to the instance

  SSHCIDR:
    Type: String
    Description: The CIDR block restricting SSH
    MinLength: 9
    Default: 131.247.0.0/16
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x
  
Resources:
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-07d0cf3af28718ef8
      InstanceType: t2.micro
      SecurityGroups:
      - !Ref WebserverSecurityGroup
      Tags:
      - Key: Name
        Value: Ubuntu Web Server
      KeyName: !Ref KeyName
      UserData:
        'Fn::Base64': |
          #!/bin/bash -x
          
          # set timezone
          timedatectl set-timezone America/New_York
          
          # install and setup apache
          apt-get update
          apt-get install -y nginx
          cd /var/www/html
          echo "<html>
               <head>
               <title>Shreyas Hastantram server</title>
               </head>
               <body>" > index.html
          echo "<h1>Shreyas Hastantram CloudFormation Server</h1>" >> index.html
          echo "<p> Public DNS:<b>">> index.html

          curl http://169.254.169.254/latest/meta-data/public-hostname >> index.html
          echo "</b></p></body></html>"
          sudo systemctl start nginx

          


  WebserverSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allows HTTP
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        FromPort: 80
        ToPort: 80
        IpProtocol: tcp
      - CidrIp: !Ref SSHCIDR
        FromPort: 22
        ToPort: 22
        IpProtocol: tcp
        
Outputs:
  WebURL:
    Description: The URL for the web page.
    Value: !Sub 'http://${EC2Instance.PublicIp}'